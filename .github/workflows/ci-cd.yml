name: CI-CD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  
jobs:

  test_job_frontend:
    name: Frontend Tests with Coverage Report
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          rm -f package-lock.json
          npm install
          npm ci
        
      - name: Run frontend tests
        run: npm run test -- --no-watch --browsers=ChromeHeadless --reporters=spec,junit --code-coverage 
      
      - name: Upload frontend coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: front/coverage/bobapp
    
  test_job_backend:
    name: Backend Tests with JaCoCo Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout backend repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
        
      - name: Run backend Tests
        run: mvn test -batch-mode
        working-directory: back

      - name: Run JaCoCo Report
        run: mvn jacoco:report
        working-directory: back

      - name: Upload JaCoCo coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/

  sonarcould_backend_job:
    name: SonarCloud Scan backend side
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=alexia-pratensi_bobapp-back
        working-directory: back

  sonarcould_frontend_job:
    name: SonarCloud Scan frontend side
    needs: test_job_frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: install dependencies
        run: |
          rm -f package-lock.json
          npm install
          npm ci

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: run frontend tests
        run: npm run test -- --no-watch --browsers=ChromeHeadless --reporters=spec,junit --code-coverage
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=alexia-pratensi_bobapp-front
            -Dsonar.organization=alexia-pratensi
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker_build_job:
    name: Build ${{matrix.component}} Docker Image and deploy to GitHub Container Registry
    needs: [sonarcould_backend_job, sonarcould_frontend_job]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  
    strategy:
      matrix:
        component: [front, back]
  
    permissions:
      contents: read
      packages: write
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.component }}
          file: ./${{ matrix.component }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ matrix.component }}

